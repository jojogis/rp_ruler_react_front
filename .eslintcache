[{"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\index.js":"1","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\App.js":"2","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\reportWebVitals.js":"3","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Auth.js":"4","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Copyright.js":"5","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Reg.js":"6","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Chat.js":"7","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\MainMenu.js":"8","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AppContext.js":"9","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\RoomsList.js":"10","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServerName.js":"11","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\RoomAppBar.js":"12","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Messages.js":"13","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\InputReplyMessage.js":"14","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ProfileDialog.js":"15","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\UsersList.js":"16","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\FormDialog.js":"17","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServersDialog.js":"18","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServerCard.js":"19","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\UserPopover.js":"20","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Emoji.js":"21","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Restore.js":"22","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddServerDialog.js":"23","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\DialogTitleWithClose.js":"24","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddRoomDialog.js":"25","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\StyledBadge.js":"26","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddCategoryDialog.js":"27","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Utils.js":"28","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Api.js":"29"},{"size":503,"mtime":1616679610000,"results":"30","hashOfConfig":"31"},{"size":6747,"mtime":1620238760707,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1616679610000,"results":"33","hashOfConfig":"31"},{"size":4735,"mtime":1620051239318,"results":"34","hashOfConfig":"31"},{"size":405,"mtime":1616679610000,"results":"35","hashOfConfig":"31"},{"size":6624,"mtime":1620051464256,"results":"36","hashOfConfig":"31"},{"size":21174,"mtime":1620234316634,"results":"37","hashOfConfig":"31"},{"size":3435,"mtime":1620230367740,"results":"38","hashOfConfig":"31"},{"size":302,"mtime":1619619001217,"results":"39","hashOfConfig":"31"},{"size":13819,"mtime":1620237876375,"results":"40","hashOfConfig":"31"},{"size":8003,"mtime":1620046888425,"results":"41","hashOfConfig":"31"},{"size":2717,"mtime":1619275162702,"results":"42","hashOfConfig":"31"},{"size":7525,"mtime":1620167917141,"results":"43","hashOfConfig":"31"},{"size":1358,"mtime":1616679610000,"results":"44","hashOfConfig":"31"},{"size":11611,"mtime":1620229616101,"results":"45","hashOfConfig":"31"},{"size":3388,"mtime":1620167939684,"results":"46","hashOfConfig":"31"},{"size":1754,"mtime":1616679610000,"results":"47","hashOfConfig":"31"},{"size":6339,"mtime":1620047445814,"results":"48","hashOfConfig":"31"},{"size":2766,"mtime":1620230340056,"results":"49","hashOfConfig":"31"},{"size":4162,"mtime":1620168143105,"results":"50","hashOfConfig":"31"},{"size":3150,"mtime":1619529624890,"results":"51","hashOfConfig":"31"},{"size":12174,"mtime":1619457167335,"results":"52","hashOfConfig":"31"},{"size":30913,"mtime":1620230204238,"results":"53","hashOfConfig":"31"},{"size":1077,"mtime":1617101286000,"results":"54","hashOfConfig":"31"},{"size":6783,"mtime":1620230657627,"results":"55","hashOfConfig":"31"},{"size":826,"mtime":1616679610000,"results":"56","hashOfConfig":"31"},{"size":3185,"mtime":1620237109342,"results":"57","hashOfConfig":"31"},{"size":699,"mtime":1620233635373,"results":"58","hashOfConfig":"31"},{"size":13450,"mtime":1620236294905,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"kco36v",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\index.js",[],["129","130"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\App.js",["131","132","133","134"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\reportWebVitals.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Auth.js",["135"],"import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n    Box, Button,\n    Container,\n    CssBaseline,\n    Grid,\n    Link,\n    TextField,\n    Typography, withStyles,Paper\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport {Copyright} from \"./Copyright\";\nimport {withRouter} from \"react-router-dom\";\nimport Api from \"./Api\";\n\n\nclass Auth extends React.Component{\n\n    routingFunction = () => {\n        this.props.history.push(\"/\");\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login:\"\",\n            pass:\"\",\n            wrongLoginPass:false\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            wrongLoginPass:false\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        Api.login(this.state.login,this.state.pass).then((data)=>{\n            if(data[\"token\"] !== undefined){\n                this.props.onLogin(data[\"token\"],data[\"user_id\"],data[\"user_type\"]);\n                this.routingFunction();\n            }else if( data[\"error\"] === 1){\n                this.setState({wrongLoginPass:true});\n            }\n        })\n    }\n\n    render() {\n        const {classes} = this.props;\n\n\n        return(<Grid container justify=\"center\">\n            <CssBaseline />\n\n            <Paper elevation={6} className={classes.paper} item>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Добро пожаловать. Снова.\n                </Typography>\n                <form className={classes.form} noValidate\n                      onSubmit={this.handleSubmit} >\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        error={this.state.wrongLoginPass}\n                        required\n                        fullWidth\n                        id=\"login\"\n                        label=\"Логин или E-mail\"\n                        name=\"login\"\n                        helperText={this.state.wrongLoginPass ? \"Неверный логин или пароль\" : \"\"}\n                        autoComplete=\"login\"\n                        onChange = {this.handleInputChange}\n                        value={this.state.login}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        error={this.state.wrongLoginPass}\n                        fullWidth\n                        onChange = {this.handleInputChange}\n                        name=\"pass\"\n                        label=\"Пароль\"\n                        type=\"password\"\n                        value={this.state.password}\n                        id=\"pass\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Войти\n                    </Button>\n\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\" to=\"/restore\" component={RouterLink}>\n                                Забыли пароль?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"/registration\" component={RouterLink} variant=\"body2\">\n                                Зарегистрироваться\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Box mt={8}>\n                    <Copyright />\n                </Box>\n            </Paper>\n\n        </Grid>);\n    }\n}\n\n\n\nAuth.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n    paper: {\n        marginTop: \"160px\",\n        padding:\"60px\",\n        width:\"500px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: \"10px\",\n    },\n    submit: {\n        margin: \"30px 0 20px\",\n    },\n};\n\n\nexport default withStyles(styles)(withRouter(Auth));","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Copyright.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Reg.js",["136","137","138","139","140","141"],"import * as React from \"react\";\nimport {\n    Box,\n    Button,\n    Container,\n    CssBaseline,\n    FormControlLabel,\n    Grid,\n    Link, Paper,\n    TextField,\n    Typography, withStyles\n} from \"@material-ui/core\";\nimport {Copyright} from \"./Copyright\";\nimport {Link as RouterLink, withRouter} from 'react-router-dom';\nimport ParticlesBg from \"particles-bg\";\nimport Api from \"./Api\";\n\n\n\nclass Reg extends React.Component{\n    routingFunction = () => {\n        this.props.history.push(\"/\");\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            login:\"\",\n            pass:\"\",\n            email:\"\",\n            isWrongLogin:\"\",\n            isWrongMail:\"\",\n            isWrongPassword:\"\"\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value,\n            isWrongLogin:\"\",\n            isWrongMail:\"\",\n            isWrongPassword:\"\"\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        if(this.state.login === \"\"){\n            this.setState({isWrongLogin:\"Введите логин\"});\n            return;\n        }\n        if(this.state.email === \"\"){\n            this.setState({isWrongMail:\"Введите email\"});\n            return;\n        }\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        if( !(re.test(this.state.email.toLowerCase())) ){\n            this.setState({isWrongMail:\"Некорректный email\"});\n            return;\n        }\n        if(this.state.pass.length < 6){\n            this.setState({isWrongPassword:\"Слишком короткий пароль\"});\n            return;\n        }\n\n        Api.register(this.state.login,this.state.pass,this.state.email).then((data)=>{\n            if(data[\"token\"] !== undefined){\n                this.props.onReg(data[\"token\"],data[\"user_id\"],data[\"user_type\"]);\n                this.routingFunction();\n            }else if( data[\"error\"] === 1){\n                this.setState({isWrongLogin:\"Логин занят\"});\n            }else if( data[\"error\"] === 2) {\n                this.setState({isWrongMail:\"Email занят\"});\n            }\n        })\n\n    }\n\n    render() {\n        const {classes} = this.props;\n        return ( <Grid container justify=\"center\">\n            <CssBaseline />\n\n            <Paper elevation={6} className={classes.paper} item>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Добро пожаловать.\n                </Typography>\n                <form className={classes.form} onSubmit={this.handleSubmit} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={12}>\n                            <TextField\n                                autoComplete=\"login\"\n                                name=\"login\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"login\"\n                                error={this.state.isWrongLogin != \"\"}\n                                helperText={this.state.isWrongLogin}\n                                onChange={this.handleInputChange}\n                                label=\"Логин\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email\"\n                                error={this.state.isWrongMail != \"\"}\n                                helperText={this.state.isWrongMail}\n                                name=\"email\"\n                                onChange={this.handleInputChange}\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"pass\"\n                                label=\"Пароль\"\n                                error={this.state.isWrongPassword != \"\"}\n                                helperText={this.state.isWrongPassword}\n                                type=\"password\"\n                                onChange={this.handleInputChange}\n                                id=\"pass\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        зарегистрироваться\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\" component={RouterLink} to=\"/restore\" >\n                                Забыли пароль?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" component={RouterLink} to=\"/login\" variant=\"body2\">\n                                Уже есть аккаунт?\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Paper>\n\n        </Grid>);\n    }\n}\n\nconst styles = {\n    paper: {\n        marginTop: \"160px\",\n        padding:\"60px\",\n        width:\"500px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: \"10px\",\n    },\n    submit: {\n        margin: \"30px 0 20px\",\n    },\n};\nexport default withStyles(styles)(withRouter(Reg));","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Chat.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\MainMenu.js",["187","188","189","190"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AppContext.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\RoomsList.js",["191","192"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServerName.js",["193"],"import * as React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    Menu,\n    MenuItem,\n    withStyles\n} from \"@material-ui/core\";\nimport {Add, Delete, Edit, ExitToApp, ExpandMore, ListAlt, Remove} from \"@material-ui/icons\";\nimport AddRoomDialog from \"./AddRoomDialog\";\nimport TokenContext from \"./AppContext\";\nimport AddServerDialog from \"./AddServerDialog\";\nimport UsersList from \"./UsersList\";\nimport AddCategoryDialog from \"./AddCategoryDialog\";\nimport Api from \"./Api\";\n\nclass ServerName extends React.Component{\n    static contextType = TokenContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl:null,\n            isAddRoomOpen:false,\n            isConfirmDeleteOpen:false,\n            isAddCategoryOpen:false,\n            editOpen:false,\n            usersListOpen:false,\n            users:[]\n        };\n        this.handleServerMenuClick       = this.handleServerMenuClick.bind(this);\n        this.handleServerMenuClose       = this.handleServerMenuClose.bind(this);\n        this.handleServerDisconnectClick = this.handleServerDisconnectClick.bind(this);\n        this.openUsersList               = this.openUsersList.bind(this);\n        this.loadUsers                   = this.loadUsers.bind(this);\n    }\n    handleServerMenuClick(event){\n        event.preventDefault();\n        this.setState({anchorEl:event.currentTarget});\n    }\n\n    handleServerMenuClose(){\n        this.setState({anchorEl:null});\n    }\n\n    handleServerDisconnectClick(){\n        this.handleServerMenuClose();\n        this.props.onServerDisconnect();\n\n    }\n\n    loadUsers(){\n        Api.getUsersOnServer(this.context.token,this.props.serverId).then((data)=>{\n            this.setState({users:data.users});\n        })\n    }\n\n    openUsersList(){\n        this.setState({usersListOpen:true});\n        this.loadUsers();\n    }\n    deleteServer(){\n        Api.deleteServer(this.context.token,this.props.serverId).then((data)=>{\n            this.setState({isConfirmDeleteOpen:false});\n            this.context.showMessage(\"Сервер удален\",\"success\");\n            this.props.updateServers();\n        })\n    }\n\n    render() {\n\n        const {classes} = this.props;\n        if(this.props.isChat){\n            return(<div><Button fullWidth onContextMenu={this.handleServerMenuClick} onClick={this.handleServerMenuClick}\n                                aria-controls=\"fade-menu\" aria-haspopup=\"true\">\n                личка\n            </Button></div>);\n        }else {\n            return (\n                <div><Button fullWidth onContextMenu={this.handleServerMenuClick} onClick={this.handleServerMenuClick}\n                             aria-controls=\"fade-menu\" aria-haspopup=\"true\">\n                    {this.props.name}<ExpandMore/>\n                </Button><Menu\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: 'center',\n                    }}\n                    getContentAnchorEl={null}\n                    anchorEl={this.state.anchorEl}\n                    keepMounted\n                    className={classes.paperWrap}\n                    open={Boolean(this.state.anchorEl)}\n                    onClose={this.handleServerMenuClose}\n                >\n                    <MenuItem className={classes.exitServer} onClick={this.handleServerDisconnectClick}>\n                        Покинуть сервер <ExitToApp className={classes.icon}/></MenuItem>\n                    <MenuItem className={classes.edit} onClick={() => {this.setState({editOpen:true});this.handleServerMenuClose()} }>\n                        Настройки <Edit className={classes.icon}/></MenuItem>\n                    {this.props.admin || this.props.role.room_edit ? <MenuItem className={classes.add} onClick={() => this.setState({isAddRoomOpen:true,anchorEl:false})}>\n                        Добавить комнату <Add className={classes.icon}/></MenuItem> : \"\"}\n                    {this.props.admin || this.props.role.room_edit ? <MenuItem className={classes.add} onClick={() => this.setState({isAddCategoryOpen:true,anchorEl:false})}>\n                        Добавить категорию <Add className={classes.icon}/></MenuItem> : \"\"}\n                    {this.props.admin ? <MenuItem className={classes.exitServer} onClick={() => this.setState({isConfirmDeleteOpen:true,anchorEl:false})}>\n                        Удалить сервер <Delete className={classes.icon}/></MenuItem> : \"\"}\n                    <MenuItem className={classes.edit} onClick={this.openUsersList}>\n                        Список участников <ListAlt className={classes.icon}/></MenuItem>\n                </Menu>\n                <AddRoomDialog\n                    open={this.state.isAddRoomOpen}\n                    serverId={this.props.serverId}\n                    onCreate={this.props.onRoomCreate}\n                    onClose={() => this.setState({isAddRoomOpen:false})}\n                />\n                <AddCategoryDialog\n                    open={this.state.isAddCategoryOpen}\n                    onCreate={this.props.onCategoryCreate}\n                    serverId={this.props.serverId}\n                    onClose={() => this.setState({isAddCategoryOpen:false})}\n                />\n                    <Dialog open={this.state.isConfirmDeleteOpen} onClose={() => this.setState({isConfirmDeleteOpen:false})}>\n                        <DialogTitle>Вы уверены?</DialogTitle>\n                        <DialogActions>\n                            <Button onClick={() => this.setState({isConfirmDeleteOpen:false})} color=\"primary\">\n                                Отменить\n                            </Button>\n                            <Button onClick={() => this.deleteServer()} color=\"primary\" autoFocus>\n                                Удалить сервер\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                    <Dialog maxWidth=\"md\" open={this.state.usersListOpen} onClose={() => this.setState({usersListOpen:false})}>\n                        <UsersList  users={this.state.users}\n                                    role={this.props.role}\n                                    server={this.props.server}\n                                    onWriteToUser={this.props.onWriteToUser}\n                                    onUsersUpdate={() => {this.props.onUsersUpdate();this.loadUsers()}}\n                                    onMessagesUpdate={this.props.onMessagesUpdate}\n                        />\n                    </Dialog>\n                    {this.props.server != null ? <AddServerDialog\n                        serverId={this.props.serverId}\n                        name={this.props.server.name}\n                        role={this.props.role}\n                        description={this.props.server.description}\n                        open={this.state.editOpen}\n                        tags={this.props.server.tags}\n                        age={this.props.server.age}\n                        avatar={this.props.server.avatar}\n                        bg={this.props.server.card_bg}\n                        isPrivate={this.props.server.is_private}\n                        roles={this.props.server.roles}\n                        onClose={() => {this.setState({editOpen:false});this.props.updateServers(); }}/> : \"\"}\n\n                </div>);\n        }\n    }\n}\n\nconst styles = {\n    add:{\n        color:\"#00e676\"\n    },\n    paperWrap:{\n        width:\"100%\",\n\n    },\n    exitServer:{\n        color:\"#f50057\",\n        \"padding-right\":\"70px\"\n    },\n    edit:{\n        color:\"#ffc107\"\n    },\n    icon:{\n        position:\"absolute\",\n        right:\"10px\"\n    }\n\n\n};\n\nexport default withStyles(styles)(ServerName);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\RoomAppBar.js",["194"],"import * as React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport Utils from \"./Utils\";\n\nclass RoomAppBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            open:false\n        };\n    }\n    render(){\n        const {classes} = this.props;\n        if(this.props.description != null && this.props.description.length > 100){\n            return(<AppBar color=\"default\" position=\"absolute\">\n                <Toolbar className={classes.root}>\n                    <Accordion className={classes.accordion} expanded={this.state.open} onChange={() => this.setState((state) => {return {open:!state.open}} )}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore />}\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography className={classes.divider} variant=\"h6\" noWrap>\n                                {this.props.name}\n                            </Typography>\n                            {!this.state.open ? <Typography className={classes.description} variant=\"body2\">\n                                {Utils.truncateString(this.props.description,100)}\n                            </Typography> : \"\"}\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography variant=\"body2\">\n                                {this.props.description}\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n\n\n                </Toolbar>\n            </AppBar>);\n        }else{\n            return(<AppBar color=\"default\" position=\"absolute\">\n                <Toolbar>\n                    <Typography className={this.props.description != \"\" ? classes.divider : \"\"} variant=\"h6\" noWrap>\n                        {this.props.name}\n                    </Typography>\n                    <Typography className={classes.description} variant=\"body2\" noWrap>\n                        {Utils.truncateString(this.props.description,100)}\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>);\n        }\n\n    }\n\n\n}\n\nconst styles = {\n    root:{\n        overflow:\"hidden\"\n    },\n    accordion:{\n        background:\"transparent\",\n        boxShadow:\"none\"\n    },\n    divider:{\n        borderRight:\"1px solid #888\",\n        paddingRight:\"10px\"\n    },\n    description:{\n        marginTop:\"5px\",\n        marginLeft:\"10px\",\n\n    }\n\n};\nexport default withStyles(styles)(RoomAppBar);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Messages.js",["195","196","197","198","199","200","201","202","203","204","205","206","207"],"import * as React from \"react\";\nimport {\n\n    Avatar, IconButton, LinearProgress, List,\n    ListItem,\n    ListItemAvatar, ListItemIcon,\n    ListItemText, Menu, MenuItem, Typography,\n\n    withStyles\n} from \"@material-ui/core\";\nimport {Delete, Reply} from \"@material-ui/icons\";\nimport TokenContext from \"./AppContext\";\nimport InputReplyMessage from \"./InputReplyMessage\";\nimport StyledBadge from \"./StyledBadge\";\nimport {blue, cyan, green, lime, orange, pink, purple, red, yellow} from \"@material-ui/core/colors\";\nimport Utils from \"./Utils\";\n\n\nclass Messages extends React.Component{\n    static contextType = TokenContext;\n    constructor(props) {\n        super(props);\n        this.state =\n            {mouseX: null,\n            mouseY: null,\n            menuMessageId:null,\n            };\n        this.handleCloseMenu = this.handleCloseMenu.bind(this);\n        this.getMessageById = this.getMessageById.bind(this);\n        this.handleDeleteMsg = this.handleDeleteMsg.bind(this);\n        this.handleReply = this.handleReply.bind(this);\n        this.handleContextClick = this.handleContextClick.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    handleContextClick(event,message_id){\n        event.preventDefault();\n        this.setState({\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4,\n            menuMessageId:message_id\n        });\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.messages !== prevProps.messages) {\n            this.scrollToBottom();\n        }\n    }\n    scrollToBottom(){\n        this.messagesEnd.scrollIntoView();\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n\n    handleCloseMenu(event){\n        event.preventDefault();\n        this.setState({\n            mouseX: null,\n            mouseY: null\n        });\n    }\n\n    getMessageById(id){\n        if(this.props.messages === undefined)return null;\n        for(let i=0;i<this.props.messages.length;i++){\n            if(this.props.messages[i].id === id)return this.props.messages[i];\n        }\n        return null;\n\n    }\n\n    handleReply(event){\n        this.props.onReplyChoose(this.state.menuMessageId);\n        this.handleCloseMenu(event);\n    }\n\n    handleDeleteMsg(event){\n        this.props.onRemoveMessage(this.state.menuMessageId);\n        this.handleCloseMenu(event);\n    }\n    handleScroll(event){\n        if(event.target.scrollTop < 400 && this.props.messages.length % 60 === 0){\n            this.props.loadMoreMessages();\n        }\n\n    }\n\n    render(){\n        const {classes} = this.props;\n        return(<div><div className={classes.roomBg} style={{\"background-image\":this.props.bg}}/><List onScroll={this.handleScroll} className={classes.messagesWrap}>\n\n            {this.props.messages.map((item,i,msgs)=>(\n            <ListItem button key={item.id}\n                      className={(item.id > this.props.lastRead ? classes.unreadMessage : \"\")+\" \"+\n                      (item.id == this.props.replyTo ? classes.replyTo : \"\") + \" \"+\n                      ((i != 0 && msgs[i - 1].sender_id == item.sender_id) ? classes.noAvatar : \"\")\n                      }\n                      onContextMenu={(event) => this.handleContextClick(event,item.id)}>\n                {(i != 0 && msgs[i - 1].sender_id == item.sender_id) ? \"\" :\n                    <ListItemAvatar>\n                        <StyledBadge variant=\"dot\"\n                                     anchorOrigin={{\n                                         vertical: 'bottom',\n                                         horizontal: 'right',\n                                     }}\n                                     overlap=\"circle\"\n                                     invisible={Utils.getElById(this.props.online, item.sender_id) == null}>\n                            <Avatar alt={item.login} src={Utils.uploadDir + item.avatar}/>\n                        </StyledBadge>\n\n                    </ListItemAvatar>\n                }\n                <ListItemText\n                    secondary={<div>{item.text}\n                    {item.reply_message != null ? <InputReplyMessage replyLogin={item.reply_message.login}\n                                                                replyText={item.reply_message.text}/> : null}</div>}>\n                    {(i != 0 && msgs[i - 1].sender_id == item.sender_id) ? \"\" :<span className={classes.login + \" \" + item.color != null ? classes[item.color+\"Text\"] : \"\"}>{item.login}</span>}\n                    {(i != 0 && msgs[i - 1].sender_id == item.sender_id) ? \"\" :<l className={classes.messageTime}> {item.datetime}</l>}\n\n\n                </ListItemText>\n            </ListItem>\n            ))}\n            <Menu\n                keepMounted\n                onContextMenu={this.handleCloseMenu}\n                open={this.state.mouseY !== null}\n                onClose={this.handleCloseMenu}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={\n                    this.state.mouseY !== null && this.state.mouseX !== null\n                        ? { top: this.state.mouseY, left: this.state.mouseX }\n                        : undefined\n                }\n            >\n                {this.getMessageById(this.state.menuMessageId) != null && (\n                this.getMessageById(this.state.menuMessageId).sender_id == this.context.user_id ||\n                    (this.props.role.msg_delete && this.props.role.role_order < this.getMessageById(this.state.menuMessageId).role_order) )?\n                    <MenuItem onClick={this.handleDeleteMsg}>\n                    <ListItemIcon>\n                        <Delete fontSize=\"small\" />\n                    </ListItemIcon>\n                    Удалить\n                </MenuItem> : \"\"}\n\n                <MenuItem onClick={this.handleReply}>\n                    <ListItemIcon>\n                        <Reply fontSize=\"small\" />\n                    </ListItemIcon>\n                    Ответить\n                </MenuItem>\n            </Menu>\n            <div style={{ float:\"left\", clear: \"both\" }}\n                 ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n        </List></div>);\n    }\n}\n\n\nconst styles = {\n    roomBg:{\n        position:\"absolute\",\n        top:0,\n        \"background-position\":\"center\",\n        \"background-size\":\"cover\",\n        left:0,\n        width:\"100%\",\n        height:\"100%\",\n        opacity: 0.2\n    },\n    messagesWrap:{\n        height:\"calc(100vh - 147px)\",\n        \"overflow\":\"auto\",\n        marginTop:\"67px\"\n    },\n    messageTime:{\n        \"font-size\":\"13px\",\n        opacity:\"0.6\"\n    },\n    unreadMessage:{\n        \"background-color\":\"rgba(255, 255, 255, 0.04)\"\n    },\n    replyTo:{\n        \"border-left\":\"2px solid #ff5722\",\n        \"background-color\":\"#ff572209\"\n    },\n    login:{\n        \"font-weight\":\"400\"\n    },\n    noAvatar:{\n        paddingLeft:\"72px\",\n        paddingTop:\"0px\",\n        paddingBlock:\"0px\"\n    },\n        redText:{\n            color:red[400]\n        },\n        pinkText:{\n            color:pink[400],\n        },\n        purpleText:{\n            color:purple[400],\n        },\n        limeText:{\n            color:lime[400],\n        },\n        blueText:{\n            color:blue[400],\n        },\n        cyanText:{\n            color:cyan[400],\n        },\n        greenText:{\n            color:green[400],\n        },\n        yellowText:{\n            color:yellow[400],\n        },\n        orangeText:{\n            color:orange[400],\n        }\n}\n\n\n;\nexport default withStyles(styles)(Messages);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\InputReplyMessage.js",["208"],"import * as React from \"react\";\nimport {Paper, withStyles} from \"@material-ui/core\";\nimport {Close} from \"@material-ui/icons\";\n\nclass InputReplyMessage extends React.Component{\n    render(){\n        const {classes} = this.props;\n        if(this.props.replyLogin === null)return(<div/>);\n        return( <div className={this.props.onCancel != null ? classes.messageReplyWrap : null }>\n                                <div className={classes.messageReply}>\n                                    <h5 className={classes.login}>{this.props.replyLogin}</h5>\n                                    <span className={classes.text}>{this.props.replyText}</span>\n                                    {this.props.onCancel != null ? <Close onClick={this.props.onCancel} className={classes.close}/> : null }\n                                </div>\n        </div>);\n    }\n}\n\nconst styles = {\n    messageReplyWrap:{\n        padding:\"10px 20px\"\n    },\n    messageReply:{\n        \"border-left\":\"2px solid #ff5722\",\n        \"padding-left\":\"10px\"\n    },\n    login:{\n        margin:\"0\",\n        \"font-size\":\"1.15em\",\n        \"font-weight\":400,\n        color:\"#ff5722\"\n    },\n    text:{\n        opacity:0.7\n    },\n    close:{\n        position:\"absolute\",\n        cursor:\"pointer\",\n        right:\"10px\",\n        top:\"10px\"\n    },\n\n\n};\nexport default withStyles(styles)(InputReplyMessage);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ProfileDialog.js",["209","210"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\UsersList.js",["211","212","213"],"import * as React from \"react\";\nimport TokenContext from \"./AppContext\";\nimport {Avatar, Badge, List, ListItem, ListItemAvatar, ListItemText, withStyles} from \"@material-ui/core\";\nimport UserPopover from \"./UserPopover\";\nimport StyledBadge from \"./StyledBadge\";\nimport {blue, cyan, green, lime, orange, pink, purple, red, yellow} from \"@material-ui/core/colors\";\nimport Utils from \"./Utils\";\n\n\n\nclass UsersList extends React.Component{\n    static contextType = TokenContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popoverOpen:false,\n            anchorEl:null,\n            clickedUser:null\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.handleWriteClick = this.handleWriteClick.bind(this);\n    }\n\n    handleWriteClick(event,id){\n        this.handleClose();\n        this.props.onWriteToUser(event,id);\n\n    }\n\n    handleClose(){\n        this.setState({popoverOpen:false})\n    }\n\n    handleClick(event,id){\n        this.setState({anchorEl:event.currentTarget,\n            clickedUser:Utils.getElById(this.props.users,id),\n            popoverOpen:true\n        });\n    }\n\n    render() {\n        const {classes} = this.props;\n        if(this.props.users == null)return(<List/>);\n        return(<div><List>\n            {this.props.users.map((user)=>(\n            <ListItem button key={user.id} onClick={(event)=>this.handleClick(event,user.id)}\n                      onContextMenu={(event)=>this.handleClick(event,user.id)}>\n                <ListItemAvatar>\n                    <StyledBadge variant=\"dot\"\n                                 anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'right',\n                                 }}\n                                 overlap=\"circle\"\n                                 invisible={user.online == 0}>\n                        <Avatar alt={user.login} src={Utils.uploadDir+user.avatar} />\n                    </StyledBadge>\n                </ListItemAvatar>\n                <ListItemText className={user.color != null ? classes[user.color+\"Text\"] : \"\"} primary={user.login}/>\n            </ListItem>\n            ))}\n        </List>\n        <UserPopover open={this.state.popoverOpen}\n                     onClose={this.handleClose}\n                     onWriteToUser={(event)=>this.handleWriteClick(event,this.state.clickedUser.id)}\n                     anchorEl={this.state.anchorEl}\n                     user={this.state.clickedUser}\n                     server={this.props.server}\n                     role={this.props.role}\n                     onUsersUpdate={this.props.onUsersUpdate}\n                     onMessagesUpdate={this.props.onMessagesUpdate}\n                     doWrite={this.state.clickedUser != null && this.context.user_id != this.state.clickedUser.id}\n        />\n        </div>)\n    }\n}\n\nconst styles = {\n    redText:{\n        color:red[400]\n    },\n    pinkText:{\n        color:pink[400],\n    },\n    purpleText:{\n        color:purple[400],\n    },\n    limeText:{\n        color:lime[400],\n    },\n    blueText:{\n        color:blue[400],\n    },\n    cyanText:{\n        color:cyan[400],\n    },\n    greenText:{\n        color:green[400],\n    },\n    yellowText:{\n        color:yellow[400],\n    },\n    orangeText:{\n        color:orange[400],\n    }\n};\nexport default withStyles(styles)(UsersList);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\FormDialog.js",["214","215"],"import * as React from \"react\";\nimport TokenContext from \"./AppContext\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    List,\n    TextField,\n    withStyles\n} from \"@material-ui/core\";\n\nclass FormDialog extends React.Component {\n    static contextType = TokenContext;\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event,key){\n        this.setState({[key]:event.target.value});\n    }\n    componentDidUpdate(prevProps) {\n        if(!prevProps.open && this.props.open){\n            this.props.names.map((item)=>{\n                this.setState({[item]:\"\"});\n            })\n        }\n    }\n\n    render() {\n\n        return (<Dialog maxWidth=\"sm\" fullWidth open={this.props.open} onClose={this.props.onClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">{this.props.text}</DialogTitle>\n\n            <DialogContent>\n                {this.props.names.map((item,i)=>(\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        onChange={(event) => this.handleChange(event,item)}\n                        label={this.props.labels[i]}\n                        type={this.props.types[i]}\n                        fullWidth\n                    />\n                ))}\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => this.props.onSave(this.state)} color=\"primary\">\n                    Сохранить\n                </Button>\n            </DialogActions>\n        </Dialog>);\n    }\n\n}\nconst styles = {\n\n};\nexport default withStyles(styles)(FormDialog);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServersDialog.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\ServerCard.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\UserPopover.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Emoji.js",["216"],"import * as React from \"react\";\nimport {Button, Fade, Popover, withStyles} from \"@material-ui/core\";\nimport {Picker} from \"emoji-mart\";\nimport {Mood} from \"@material-ui/icons\";\n\nclass Emoji extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open:false,\n            anchorEl:null,\n        }\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleButtonClick(event){\n        this.setState({\n            anchorEl:event.currentTarget,\n            open:true\n        });\n    }\n    handleClose(){\n        this.setState({open:false});\n    }\n\n\n    render() {\n        const {classes} = this.props;\n        return (<div><Button onClick={this.handleButtonClick} className={classes.emojiButton}><Mood/></Button>\n            <Popover\n            open={this.state.open}\n            anchorEl={this.state.anchorEl}\n            onClose={this.handleClose}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n        >\n            <Picker\n                native={true}\n\n                theme={this.props.isDarkTheme ? \"dark\" : \"light\"}\n                color=\"#ff5722\"\n                defaultSkin={6}\n                title=\"\"\n                disableSkinTonePicker={true}\n                onSelect={this.props.onSelect}\n                emoji='point_up'\n                showPreview={false}\n                i18n={{search: 'Поиск',\n                    clear: 'Очистить',\n                    notfound: 'Не найдено',\n                    skintext: 'Нигер?',\n                    categories: {\n                        search: 'Результаты',\n                        recent: 'Любимые смайлики',\n                        smileys: 'Эмоции',\n                        people: 'Люди',\n                        nature: 'Не люди',\n                        foods: 'Хавчик',\n                        activity: 'Спорт',\n                        places: 'Путешествия',\n                        objects: 'Предметы',\n                        symbols: 'Символы',\n                        flags: 'Флаги',\n                        custom: 'Кастом',\n                    },\n                    categorieslabel: 'Категории', // Accessible title for the list of categories\n                    skintones: {\n                        1: 'Китаец',\n                        2: 'Ариец',\n                        3: 'Не совсем ариец',\n                        4: 'Полу нигер',\n                        5: 'Нигер',\n                        6: 'Самый нигерный нигер',\n                    }}}\n            />\n\n        </Popover></div>);\n    }\n}\nconst styles = {\n    emojiButton:{\n        position:\"absolute\",\n        bottom:\"10px\",\n        right:\"69px\",\n        opacity:0.7\n    },\n};\nexport default withStyles(styles)(Emoji);","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Restore.js",["217","218","219","220","221"],"import * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n    Box, Button,\n    Container,\n    CssBaseline,\n    Grid,\n    Link, Paper,\n    TextField,\n    Typography, withStyles\n} from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport {Copyright} from \"./Copyright\";\nimport {withRouter} from \"react-router-dom\";\n\n\n\nclass Restore extends React.Component{\n\n    routingFunction = () => {\n        this.props.history.push(\"/login\");\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login:\"\",\n            wrongLogin:false,\n            wrongCode:false,\n            codeSend:false,\n            code:\"\",\n            codeConfirm:false,\n            password:\"\",\n            emptyPass:false,\n            passwordRepeat:\"\",\n            wrongPass:false\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmitLogin = this.handleSubmitLogin.bind(this);\n        this.handleSubmitCode = this.handleSubmitCode.bind(this);\n        this.handleSubmitPass = this.handleSubmitPass.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            wrongLogin:false\n        });\n    }\n\n    handleSubmitLogin(e){\n        e.preventDefault();\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: \"login=\"+this.state.login\n        };\n        fetch(\"https://rp-ruler.ru/api/restore_send.php\",requestOptions)\n            .then(response => response.json())\n            .then((data)=>{\n                if(data[\"success\"] == 1){\n                    this.setState({codeSend:true,wrongLogin:false});\n                }else{\n                    this.setState({wrongLogin:true});\n                }\n            })\n    }\n    handleSubmitCode(e){\n        e.preventDefault();\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: \"login=\"+this.state.login+\"&code=\"+this.state.code\n        };\n        fetch(\"https://rp-ruler.ru/api/restore_code_check.php\",requestOptions)\n            .then(response => response.json())\n            .then((data)=>{\n                if(data[\"correct\"] == 1){\n                    this.setState({codeConfirm:true,wrongCode:false});\n                }else{\n                    this.setState({wrongCode:true});\n                }\n            })\n    }\n    handleSubmitPass(e){\n        e.preventDefault();\n        if(this.state.password.length < 6){\n            this.setState({emptyPass:true});\n            return;\n        }\n        if(this.state.password != this.state.passwordRepeat){\n            this.setState({wrongPass:true});\n            return;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: \"login=\"+this.state.login+\"&code=\"+this.state.code+\"&pass=\"+this.state.password\n        };\n        fetch(\"https://rp-ruler.ru/api/restore.php\",requestOptions)\n            .then(response => response.json())\n            .then((data)=>{\n                if(data[\"success\"] == 1){\n                    this.setState({wrongPass:false});\n                    this.routingFunction();\n                }\n            })\n    }\n\n    render() {\n        const {classes} = this.props;\n        if(!this.state.codeSend){\n            return(<Grid container justify=\"center\">\n                <CssBaseline />\n                <Paper elevation={6} className={classes.paper} item>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Восстановление пароля. Снова...\n                    </Typography>\n                    <form className={classes.form} noValidate\n                          onSubmit={this.handleSubmitLogin} >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            error={this.state.wrongLogin}\n                            required\n                            fullWidth\n                            id=\"login\"\n                            label=\"Логин или E-mail\"\n                            name=\"login\"\n                            helperText={this.state.wrongLogin ? \"Пользователь не найден\" : \"\"}\n                            autoComplete=\"login\"\n                            onChange = {this.handleInputChange}\n                            value={this.state.login}\n                            autoFocus\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Отправить письмо\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\" to=\"/login\" component={RouterLink}>\n                                    Войти\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link to=\"/registration\" component={RouterLink} variant=\"body2\">\n                                    Зарегистрироваться\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    <Box mt={8}>\n                        <Copyright />\n                    </Box>\n                </Paper>\n\n            </Grid>);\n\n        }else if(!this.state.codeConfirm){\n\n            return(<Grid container justify=\"center\">\n                <CssBaseline />\n                <Paper elevation={6} className={classes.paper} item>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Восстановление пароля. Снова...\n                    </Typography>\n                    <form className={classes.form} noValidate\n                          onSubmit={this.handleSubmitCode} >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            error={this.state.wrongCode}\n                            required\n                            fullWidth\n                            id=\"code\"\n                            label=\"Код из письма\"\n                            name=\"code\"\n                            autoComplete=\"false\"\n                            helperText={this.state.wrongCode ? \"Неверный код\" : \"\"}\n                            onChange = {this.handleInputChange}\n                            value={this.state.code}\n                            autoFocus\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Отправить\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\" to=\"/login\" component={RouterLink}>\n                                    Войти\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link to=\"/registration\" component={RouterLink} variant=\"body2\">\n                                    Зарегистрироваться\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    <Box mt={8}>\n                        <Copyright />\n                    </Box>\n                </Paper>\n\n            </Grid>);\n\n        }else{\n            return(<Grid container justify=\"center\">\n                <CssBaseline />\n                <Paper elevation={6} className={classes.paper} item>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Восстановление пароля. Снова...\n                    </Typography>\n                    <form className={classes.form} noValidate\n                          onSubmit={this.handleSubmitPass} >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            error={this.state.emptyPass}\n                            helperText={this.state.emptyPass ? \"Слишком короткий пароль\" : \"\"}\n                            id=\"password\"\n                            label=\"Новый пароль\"\n                            name=\"password\"\n                            type=\"password\"\n                            autoComplete=\"password\"\n                            onChange = {this.handleInputChange}\n                            value={this.state.password}\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            error={this.state.wrongPass}\n                            helperText={this.state.wrongPass ? \"Пароли не совпадают\" : \"\"}\n                            id=\"passwordRepeat\"\n                            label=\"Еще раз, чтобы не забыл\"\n                            name=\"passwordRepeat\"\n                            type=\"password\"\n                            autoComplete=\"password\"\n                            onChange = {this.handleInputChange}\n                            value={this.state.passwordRepeat}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Поменять пароль\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\" to=\"/login\" component={RouterLink}>\n                                    Войти\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link to=\"/registration\" component={RouterLink} variant=\"body2\">\n                                    Зарегистрироваться\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    <Box mt={8}>\n                        <Copyright />\n                    </Box>\n                </Paper>\n\n            </Grid>);\n        }\n\n\n    }\n}\n\n\n\nRestore.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = {\n    paper: {\n        marginTop: \"160px\",\n        padding:\"60px\",\n        width:\"500px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: \"10px\",\n    },\n    submit: {\n        margin: \"30px 0 20px\",\n    },\n};\n\n\nexport default withStyles(styles)(withRouter(Restore));","C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddServerDialog.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\DialogTitleWithClose.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddRoomDialog.js",["239","240","241","242","243"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\StyledBadge.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\AddCategoryDialog.js",["244","245","246","247","248"],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Utils.js",[],"C:\\Users\\alexe\\WebstormProjects\\untitled\\src\\Api.js",["249"],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":8,"nodeType":"256","messageId":"257","endLine":1,"endColumn":15},{"ruleId":"258","severity":1,"message":"259","line":49,"column":56,"nodeType":"260","messageId":"261","endLine":49,"endColumn":58},{"ruleId":"258","severity":1,"message":"259","line":78,"column":33,"nodeType":"260","messageId":"261","endLine":78,"endColumn":35},{"ruleId":"254","severity":1,"message":"262","line":189,"column":9,"nodeType":"256","messageId":"257","endLine":189,"endColumn":20},{"ruleId":"254","severity":1,"message":"263","line":5,"column":5,"nodeType":"256","messageId":"257","endLine":5,"endColumn":14},{"ruleId":"254","severity":1,"message":"263","line":5,"column":5,"nodeType":"256","messageId":"257","endLine":5,"endColumn":14},{"ruleId":"254","severity":1,"message":"264","line":7,"column":5,"nodeType":"256","messageId":"257","endLine":7,"endColumn":21},{"ruleId":"254","severity":1,"message":"265","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":19},{"ruleId":"258","severity":1,"message":"266","line":101,"column":64,"nodeType":"260","messageId":"261","endLine":101,"endColumn":66},{"ruleId":"258","severity":1,"message":"266","line":115,"column":63,"nodeType":"260","messageId":"261","endLine":115,"endColumn":65},{"ruleId":"258","severity":1,"message":"266","line":129,"column":67,"nodeType":"260","messageId":"261","endLine":129,"endColumn":69},{"ruleId":"254","severity":1,"message":"267","line":3,"column":5,"nodeType":"256","messageId":"257","endLine":3,"endColumn":11},{"ruleId":"254","severity":1,"message":"268","line":5,"column":27,"nodeType":"256","messageId":"257","endLine":5,"endColumn":31},{"ruleId":"254","severity":1,"message":"269","line":5,"column":33,"nodeType":"256","messageId":"257","endLine":5,"endColumn":41},{"ruleId":"254","severity":1,"message":"270","line":5,"column":43,"nodeType":"256","messageId":"257","endLine":5,"endColumn":57},{"ruleId":"254","severity":1,"message":"271","line":5,"column":59,"nodeType":"256","messageId":"257","endLine":5,"endColumn":71},{"ruleId":"254","severity":1,"message":"272","line":11,"column":10,"nodeType":"256","messageId":"257","endLine":11,"endColumn":16},{"ruleId":"254","severity":1,"message":"273","line":22,"column":5,"nodeType":"256","messageId":"257","endLine":22,"endColumn":13},{"ruleId":"254","severity":1,"message":"274","line":23,"column":5,"nodeType":"256","messageId":"257","endLine":23,"endColumn":18},{"ruleId":"254","severity":1,"message":"275","line":24,"column":5,"nodeType":"256","messageId":"257","endLine":24,"endColumn":15},{"ruleId":"254","severity":1,"message":"276","line":25,"column":5,"nodeType":"256","messageId":"257","endLine":25,"endColumn":22},{"ruleId":"254","severity":1,"message":"277","line":26,"column":5,"nodeType":"256","messageId":"257","endLine":26,"endColumn":14},{"ruleId":"254","severity":1,"message":"278","line":27,"column":5,"nodeType":"256","messageId":"257","endLine":27,"endColumn":18},{"ruleId":"254","severity":1,"message":"279","line":28,"column":5,"nodeType":"256","messageId":"257","endLine":28,"endColumn":9},{"ruleId":"254","severity":1,"message":"280","line":29,"column":5,"nodeType":"256","messageId":"257","endLine":29,"endColumn":18},{"ruleId":"254","severity":1,"message":"281","line":30,"column":5,"nodeType":"256","messageId":"257","endLine":30,"endColumn":19},{"ruleId":"254","severity":1,"message":"282","line":31,"column":5,"nodeType":"256","messageId":"257","endLine":31,"endColumn":11},{"ruleId":"254","severity":1,"message":"283","line":32,"column":5,"nodeType":"256","messageId":"257","endLine":32,"endColumn":8},{"ruleId":"254","severity":1,"message":"284","line":33,"column":5,"nodeType":"256","messageId":"257","endLine":33,"endColumn":15},{"ruleId":"254","severity":1,"message":"285","line":34,"column":5,"nodeType":"256","messageId":"257","endLine":34,"endColumn":22},{"ruleId":"254","severity":1,"message":"286","line":35,"column":5,"nodeType":"256","messageId":"257","endLine":35,"endColumn":12},{"ruleId":"254","severity":1,"message":"287","line":36,"column":5,"nodeType":"256","messageId":"257","endLine":36,"endColumn":13},{"ruleId":"254","severity":1,"message":"288","line":37,"column":5,"nodeType":"256","messageId":"257","endLine":37,"endColumn":19},{"ruleId":"254","severity":1,"message":"289","line":37,"column":21,"nodeType":"256","messageId":"257","endLine":37,"endColumn":30},{"ruleId":"254","severity":1,"message":"290","line":37,"column":32,"nodeType":"256","messageId":"257","endLine":37,"endColumn":37},{"ruleId":"254","severity":1,"message":"291","line":37,"column":39,"nodeType":"256","messageId":"257","endLine":37,"endColumn":44},{"ruleId":"254","severity":1,"message":"292","line":37,"column":46,"nodeType":"256","messageId":"257","endLine":37,"endColumn":50},{"ruleId":"254","severity":1,"message":"293","line":37,"column":52,"nodeType":"256","messageId":"257","endLine":37,"endColumn":66},{"ruleId":"254","severity":1,"message":"294","line":37,"column":68,"nodeType":"256","messageId":"257","endLine":37,"endColumn":74},{"ruleId":"254","severity":1,"message":"295","line":37,"column":76,"nodeType":"256","messageId":"257","endLine":37,"endColumn":90},{"ruleId":"254","severity":1,"message":"296","line":37,"column":92,"nodeType":"256","messageId":"257","endLine":37,"endColumn":98},{"ruleId":"254","severity":1,"message":"297","line":38,"column":11,"nodeType":"256","messageId":"257","endLine":38,"endColumn":23},{"ruleId":"254","severity":1,"message":"298","line":38,"column":25,"nodeType":"256","messageId":"257","endLine":38,"endColumn":28},{"ruleId":"254","severity":1,"message":"299","line":38,"column":30,"nodeType":"256","messageId":"257","endLine":38,"endColumn":37},{"ruleId":"254","severity":1,"message":"300","line":38,"column":39,"nodeType":"256","messageId":"257","endLine":38,"endColumn":44},{"ruleId":"254","severity":1,"message":"301","line":38,"column":46,"nodeType":"256","messageId":"257","endLine":38,"endColumn":50},{"ruleId":"254","severity":1,"message":"302","line":43,"column":26,"nodeType":"256","messageId":"257","endLine":43,"endColumn":38},{"ruleId":"303","severity":1,"message":"304","line":96,"column":17,"nodeType":"305","endLine":96,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":97,"column":17,"nodeType":"305","endLine":97,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":148,"column":47,"nodeType":"260","messageId":"261","endLine":148,"endColumn":49},{"ruleId":"258","severity":1,"message":"266","line":203,"column":27,"nodeType":"260","messageId":"261","endLine":203,"endColumn":29},{"ruleId":"258","severity":1,"message":"266","line":238,"column":39,"nodeType":"260","messageId":"261","endLine":238,"endColumn":41},{"ruleId":"258","severity":1,"message":"266","line":303,"column":34,"nodeType":"260","messageId":"261","endLine":303,"endColumn":36},{"ruleId":"258","severity":1,"message":"266","line":364,"column":29,"nodeType":"260","messageId":"261","endLine":364,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":459,"column":52,"nodeType":"260","messageId":"261","endLine":459,"endColumn":54},{"ruleId":"258","severity":1,"message":"259","line":463,"column":55,"nodeType":"260","messageId":"261","endLine":463,"endColumn":57},{"ruleId":"254","severity":1,"message":"306","line":2,"column":17,"nodeType":"256","messageId":"257","endLine":2,"endColumn":23},{"ruleId":"254","severity":1,"message":"307","line":3,"column":9,"nodeType":"256","messageId":"257","endLine":3,"endColumn":22},{"ruleId":"254","severity":1,"message":"308","line":10,"column":8,"nodeType":"256","messageId":"257","endLine":10,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":52,"column":41,"nodeType":"260","messageId":"261","endLine":52,"endColumn":43},{"ruleId":"254","severity":1,"message":"309","line":22,"column":18,"nodeType":"256","messageId":"257","endLine":22,"endColumn":25},{"ruleId":"258","severity":1,"message":"259","line":106,"column":71,"nodeType":"260","messageId":"261","endLine":106,"endColumn":73},{"ruleId":"254","severity":1,"message":"310","line":11,"column":60,"nodeType":"256","messageId":"257","endLine":11,"endColumn":66},{"ruleId":"258","severity":1,"message":"266","line":51,"column":67,"nodeType":"260","messageId":"261","endLine":51,"endColumn":69},{"ruleId":"254","severity":1,"message":"311","line":4,"column":13,"nodeType":"256","messageId":"257","endLine":4,"endColumn":23},{"ruleId":"254","severity":1,"message":"312","line":4,"column":25,"nodeType":"256","messageId":"257","endLine":4,"endColumn":39},{"ruleId":"254","severity":1,"message":"313","line":7,"column":35,"nodeType":"256","messageId":"257","endLine":7,"endColumn":45},{"ruleId":"258","severity":1,"message":"259","line":98,"column":32,"nodeType":"260","messageId":"261","endLine":98,"endColumn":34},{"ruleId":"258","severity":1,"message":"266","line":99,"column":27,"nodeType":"260","messageId":"261","endLine":99,"endColumn":29},{"ruleId":"258","severity":1,"message":"259","line":99,"column":57,"nodeType":"260","messageId":"261","endLine":99,"endColumn":59},{"ruleId":"258","severity":1,"message":"266","line":102,"column":21,"nodeType":"260","messageId":"261","endLine":102,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":102,"column":51,"nodeType":"260","messageId":"261","endLine":102,"endColumn":53},{"ruleId":"258","severity":1,"message":"266","line":120,"column":25,"nodeType":"260","messageId":"261","endLine":120,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":120,"column":55,"nodeType":"260","messageId":"261","endLine":120,"endColumn":57},{"ruleId":"258","severity":1,"message":"266","line":121,"column":25,"nodeType":"260","messageId":"261","endLine":121,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":121,"column":55,"nodeType":"260","messageId":"261","endLine":121,"endColumn":57},{"ruleId":"258","severity":1,"message":"259","line":140,"column":73,"nodeType":"260","messageId":"261","endLine":140,"endColumn":75},{"ruleId":"254","severity":1,"message":"314","line":2,"column":9,"nodeType":"256","messageId":"257","endLine":2,"endColumn":14},{"ruleId":"254","severity":1,"message":"315","line":10,"column":26,"nodeType":"256","messageId":"257","endLine":10,"endColumn":34},{"ruleId":"258","severity":1,"message":"266","line":119,"column":68,"nodeType":"260","messageId":"261","endLine":119,"endColumn":70},{"ruleId":"254","severity":1,"message":"316","line":3,"column":17,"nodeType":"256","messageId":"257","endLine":3,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":56,"column":57,"nodeType":"260","messageId":"261","endLine":56,"endColumn":59},{"ruleId":"258","severity":1,"message":"266","line":73,"column":86,"nodeType":"260","messageId":"261","endLine":73,"endColumn":88},{"ruleId":"254","severity":1,"message":"268","line":9,"column":5,"nodeType":"256","messageId":"257","endLine":9,"endColumn":9},{"ruleId":"317","severity":1,"message":"318","line":25,"column":40,"nodeType":"319","messageId":"320","endLine":25,"endColumn":42},{"ruleId":"254","severity":1,"message":"321","line":2,"column":17,"nodeType":"256","messageId":"257","endLine":2,"endColumn":21},{"ruleId":"254","severity":1,"message":"263","line":5,"column":5,"nodeType":"256","messageId":"257","endLine":5,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":68,"column":36,"nodeType":"260","messageId":"261","endLine":68,"endColumn":38},{"ruleId":"258","severity":1,"message":"259","line":87,"column":36,"nodeType":"260","messageId":"261","endLine":87,"endColumn":38},{"ruleId":"258","severity":1,"message":"266","line":100,"column":32,"nodeType":"260","messageId":"261","endLine":100,"endColumn":34},{"ruleId":"258","severity":1,"message":"259","line":114,"column":36,"nodeType":"260","messageId":"261","endLine":114,"endColumn":38},{"ruleId":"254","severity":1,"message":"322","line":34,"column":5,"nodeType":"256","messageId":"257","endLine":34,"endColumn":21},{"ruleId":"254","severity":1,"message":"323","line":35,"column":5,"nodeType":"256","messageId":"257","endLine":35,"endColumn":18},{"ruleId":"254","severity":1,"message":"324","line":36,"column":5,"nodeType":"256","messageId":"257","endLine":36,"endColumn":27},{"ruleId":"254","severity":1,"message":"325","line":40,"column":21,"nodeType":"256","messageId":"257","endLine":40,"endColumn":31},{"ruleId":"258","severity":1,"message":"259","line":80,"column":46,"nodeType":"260","messageId":"261","endLine":80,"endColumn":48},{"ruleId":"258","severity":1,"message":"259","line":118,"column":46,"nodeType":"260","messageId":"261","endLine":118,"endColumn":48},{"ruleId":"258","severity":1,"message":"266","line":143,"column":68,"nodeType":"260","messageId":"261","endLine":143,"endColumn":70},{"ruleId":"258","severity":1,"message":"259","line":146,"column":37,"nodeType":"260","messageId":"261","endLine":146,"endColumn":39},{"ruleId":"258","severity":1,"message":"259","line":165,"column":35,"nodeType":"260","messageId":"261","endLine":165,"endColumn":37},{"ruleId":"303","severity":1,"message":"304","line":233,"column":61,"nodeType":"305","endLine":233,"endColumn":71},{"ruleId":"258","severity":1,"message":"259","line":236,"column":133,"nodeType":"260","messageId":"261","endLine":236,"endColumn":135},{"ruleId":"326","severity":1,"message":"327","line":265,"column":46,"nodeType":"328","endLine":265,"endColumn":111},{"ruleId":"258","severity":1,"message":"266","line":290,"column":58,"nodeType":"260","messageId":"261","endLine":290,"endColumn":60},{"ruleId":"258","severity":1,"message":"259","line":389,"column":87,"nodeType":"260","messageId":"261","endLine":389,"endColumn":89},{"ruleId":"258","severity":1,"message":"259","line":392,"column":99,"nodeType":"260","messageId":"261","endLine":392,"endColumn":101},{"ruleId":"258","severity":1,"message":"259","line":413,"column":79,"nodeType":"260","messageId":"261","endLine":413,"endColumn":81},{"ruleId":"258","severity":1,"message":"259","line":417,"column":91,"nodeType":"260","messageId":"261","endLine":417,"endColumn":93},{"ruleId":"254","severity":1,"message":"264","line":7,"column":5,"nodeType":"256","messageId":"257","endLine":7,"endColumn":21},{"ruleId":"254","severity":1,"message":"329","line":10,"column":5,"nodeType":"256","messageId":"257","endLine":10,"endColumn":11},{"ruleId":"258","severity":1,"message":"266","line":76,"column":68,"nodeType":"260","messageId":"261","endLine":76,"endColumn":70},{"ruleId":"326","severity":1,"message":"327","line":96,"column":46,"nodeType":"328","endLine":96,"endColumn":111},{"ruleId":"258","severity":1,"message":"266","line":118,"column":58,"nodeType":"260","messageId":"261","endLine":118,"endColumn":60},{"ruleId":"254","severity":1,"message":"264","line":3,"column":40,"nodeType":"256","messageId":"257","endLine":3,"endColumn":56},{"ruleId":"254","severity":1,"message":"329","line":3,"column":64,"nodeType":"256","messageId":"257","endLine":3,"endColumn":70},{"ruleId":"258","severity":1,"message":"259","line":24,"column":62,"nodeType":"260","messageId":"261","endLine":24,"endColumn":64},{"ruleId":"254","severity":1,"message":"330","line":47,"column":16,"nodeType":"256","messageId":"257","endLine":47,"endColumn":23},{"ruleId":"258","severity":1,"message":"266","line":62,"column":58,"nodeType":"260","messageId":"261","endLine":62,"endColumn":60},{"ruleId":"254","severity":1,"message":"331","line":1,"column":8,"nodeType":"256","messageId":"257","endLine":1,"endColumn":18},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'contextType' is assigned a value but never used.","'Container' is defined but never used.","'FormControlLabel' is defined but never used.","'ParticlesBg' is defined but never used.","Expected '!==' and instead saw '!='.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Picker' is defined but never used.","'Bookmark' is defined but never used.","'ChangeHistory' is defined but never used.","'ChatBubble' is defined but never used.","'ChatBubbleOutline' is defined but never used.","'ChildCare' is defined but never used.","'ChildFriendly' is defined but never used.","'Code' is defined but never used.","'DirectionsRun' is defined but never used.","'DirectionsWalk' is defined but never used.","'Drafts' is defined but never used.","'Eco' is defined but never used.","'EmojiFlags' is defined but never used.","'EmojiFoodBeverage' is defined but never used.","'Explore' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'Fireplace' is defined but never used.","'Grade' is defined but never used.","'Group' is defined but never used.","'Home' is defined but never used.","'MonetizationOn' is defined but never used.","'Person' is defined but never used.","'QuestionAnswer' is defined but never used.","'School' is defined but never used.","'SmokingRooms' is defined but never used.","'Spa' is defined but never used.","'Terrain' is defined but never used.","'Waves' is defined but never used.","'Work' is defined but never used.","'W3CWebSocket' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Dialog' is defined but never used.","'AssignmentInd' is defined but never used.","'UsersList' is defined but never used.","'reorder' is defined but never used.","'Remove' is defined but never used.","'IconButton' is defined but never used.","'LinearProgress' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'Snackbar' is defined but never used.","'Badge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Fade' is defined but never used.","'reorderImmutable' is defined but never used.","'reorderFromTo' is defined but never used.","'reorderFromToImmutable' is defined but never used.","'deepPurple' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Switch' is defined but never used.","'classes' is assigned a value but never used.","'AppContext' is defined but never used.","no-global-assign","no-unsafe-negation"]